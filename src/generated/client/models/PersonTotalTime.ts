/* tslint:disable */
/* eslint-disable */
/**
 * Timebank
 * Timebank API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Person's total time
 * @export
 * @interface PersonTotalTime
 */
export interface PersonTotalTime {
    /**
     * 
     * @type {number}
     * @memberof PersonTotalTime
     */
    personId?: number;
    /**
     * Difference between expected and logged time.
     * @type {number}
     * @memberof PersonTotalTime
     */
    balance: number;
    /**
     * Total amount logged time of person.
     * @type {number}
     * @memberof PersonTotalTime
     */
    logged: number;
    /**
     * Total amount expected time of person.
     * @type {number}
     * @memberof PersonTotalTime
     */
    expected: number;
    /**
     * Total amount of internal time of person.
     * @type {number}
     * @memberof PersonTotalTime
     */
    internalTime: number;
    /**
     * Total amount of project time of person.
     * @type {number}
     * @memberof PersonTotalTime
     */
    projectTime: number;
    /**
     * String identifying the relevant year/month/week for the requested period of time total.
     * @type {string}
     * @memberof PersonTotalTime
     */
    timePeriod?: string;
}

export function PersonTotalTimeFromJSON(json: any): PersonTotalTime {
    return PersonTotalTimeFromJSONTyped(json, false);
}

export function PersonTotalTimeFromJSONTyped(json: any, ignoreDiscriminator: boolean): PersonTotalTime {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'personId': !exists(json, 'personId') ? undefined : json['personId'],
        'balance': json['balance'],
        'logged': json['logged'],
        'expected': json['expected'],
        'internalTime': json['internalTime'],
        'projectTime': json['projectTime'],
        'timePeriod': !exists(json, 'timePeriod') ? undefined : json['timePeriod'],
    };
}

export function PersonTotalTimeToJSON(value?: PersonTotalTime | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'personId': value.personId,
        'balance': value.balance,
        'logged': value.logged,
        'expected': value.expected,
        'internalTime': value.internalTime,
        'projectTime': value.projectTime,
        'timePeriod': value.timePeriod,
    };
}


