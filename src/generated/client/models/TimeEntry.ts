/* tslint:disable */
/* eslint-disable */
/**
 * Timebank
 * Timebank API documentation
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * Person's single time entry
 * @export
 * @interface TimeEntry
 */
export interface TimeEntry {
    /**
     * ID of DailyEntry in UUID
     * @type {string}
     * @memberof TimeEntry
     */
    entryId: string;
    /**
     * TimeEntry ID in Forecast
     * @type {number}
     * @memberof TimeEntry
     */
    forecastId: number;
    /**
     * Person ID in Forecast
     * @type {number}
     * @memberof TimeEntry
     */
    person: number;
    /**
     * Amount of internal time per time entry
     * @type {number}
     * @memberof TimeEntry
     */
    internalTime: number;
    /**
     * Amount of project time per time entry
     * @type {number}
     * @memberof TimeEntry
     */
    projectTime: number;
    /**
     * Date of time entry
     * @type {Date}
     * @memberof TimeEntry
     */
    date: Date;
    /**
     * Date time of time entry registration
     * @type {Date}
     * @memberof TimeEntry
     */
    createdAt: Date;
    /**
     * Date time of time entry update
     * @type {Date}
     * @memberof TimeEntry
     */
    updatedAt: Date;
}

export function TimeEntryFromJSON(json: any): TimeEntry {
    return TimeEntryFromJSONTyped(json, false);
}

export function TimeEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): TimeEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'entryId': json['entryId'],
        'forecastId': json['forecastId'],
        'person': json['person'],
        'internalTime': json['internalTime'],
        'projectTime': json['projectTime'],
        'date': (new Date(json['date'])),
        'createdAt': (new Date(json['createdAt'])),
        'updatedAt': (new Date(json['updatedAt'])),
    };
}

export function TimeEntryToJSON(value?: TimeEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'entryId': value.entryId,
        'forecastId': value.forecastId,
        'person': value.person,
        'internalTime': value.internalTime,
        'projectTime': value.projectTime,
        'date': (value.date.toISOString().substr(0,10)),
        'createdAt': (value.createdAt.toISOString()),
        'updatedAt': (value.updatedAt.toISOString()),
    };
}


